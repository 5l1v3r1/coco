if yes = on = t = true
  no = false
else
  ok 0


# As implicit argument, nested, and/or one-liner.
eq 1, if yes
  if on
    if no then false else
      if t
        1

ok if 0
  0
else if 0/0
  0/0
else if void
  void
else if null
  null
else true

ok if false then false else if false then false else true
eq 100, Number if false then 300 else 100


# `unless`
eq 1, unless true
  0
else
  1


# Returning if-else.
eq -1, do -> if 1 < 0.5 then 1 else -1


# `else`-less `if` returns `undefined` with falsy condition.
eq void, if 0 then
eq void, do -> if 0 then


# As part of a larger operation.
eq 2, 1 + if false then 10 else 1


# Indented within an assignment.
eq 5, do ->
  a =
    if false
      3
    else
      5
  101
  a


# Unmatched `then` should close implicit calls.
i = 1
if Boolean 1 then ++i
eq i, 2


# Unmatched `else` should close implicit blocks.
eq 2, do -> if 0 then -> 1 else 2


# With a suppressed indentation via assignment.
eq 70,
  if      false then 10
  else if false    then 20
  else if 0     then 30
  else if NaN   then 40
  else               50 +
       if false then 10
       else          20


if 'tight formatting with leading `then` is allowed'
then ok    'yay'
else throw 'boo'


# [coffee#738](https://github.com/jashkenas/coffee-script/issues/738)
eq 1, do if true then -> 1


eq '''
var that;
if (1) {
  if (that = 2) {
    if (3) {
      4;
    }
    if (that) {
      5;
    }
  }
}
if (!(that = 6)) {
  that;
}
''', Coco.compile '''
if 1
  if 2
    4 if 3
    5 if that
that unless 6
''', {+bare}


eq 2, [if 1 then 2       , 3].0
eq 2, [if 0 then 1 else 2, 3].0


# [coffee#1026](https://github.com/jashkenas/coffee-script/issues/1026)
throws "Parse error on line 3: Unexpected 'ELSE'", -> Coco.nodes '''
  if a then b
  else then c
  else then d
'''
