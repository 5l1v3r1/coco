return unless {}__defineGetter__ 

v = 'foo'
o =
  key: ~      -> @x
  key: ~ (@x) ->
  (v): ~      -> @y
  (v): ~ (@y) ->
ok 'key' in o
eq 1, o.key = 1
eq 1, o.key
ok 'foo' in o
eq 2, o.foo = 2
eq 2, o.foo

o <<< a:~ -> 1
eq 1, o.a

:: =
  p:~      -> @z
  p:~ (@z) ->
class C extends {::}
  p:~     -> super
  p:~ (z) -> super = z
c = new C
c.p = 3
eq c.p, 3

throws 'excess accessor parameter on line 1' -> Coco.compile 'p:~ (a, b) ->'

throws 'named accessor on line 1' -> Coco.compile 'p:~ function f ->'

# No implicit parameter on getter.
eq '''({
  get p(){
    return it;
  }
});''' Coco.compile 'p:~ -> it' {+bare}
