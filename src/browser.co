(Coco = require \./coco) <<< {require}

# Override exported methods for non-[node.js](http://nodejs.org) environments.
Coco.eval = (code, options) -> (0; eval) Coco.compile code, options
Coco.run  = (code, options = {}) ->
  do Function Coco.compile code, options import {+bare}

# If we're not in a browser environment, we're finished with the public API.
return unless window?

# Load a remote script from the current domain via XHR.
Coco.load = (url, options) ->
  xhr = new (self.ActiveXObject or XMLHttpRequest) \Microsoft.XMLHTTP
  xhr.open \GET, url, true
  xhr.overrideMimeType \text/plain if \overrideMimeType in xhr
  xhr.onreadystatechange = ->
    Coco.run xhr.responseText, options if xhr.readyState is 4
  xhr.send null

# Activate Coco in the browser by having it compile and evaluate
# all script tags with a content-type of `text/coco`.
# This happens on page load.
if self.addEventListener
then addEventListener \DOMContentLoaded, runScripts, false
else attachEvent      \onload,           runScripts
function runScripts ->
  for script of document.getElementsByTagName \script
    continue unless script.type is \text/coco
    if script.src
    then Coco.load script.src
    else Coco.run  script.innerHTML
  void
